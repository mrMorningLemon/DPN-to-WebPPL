var init = function(){
globalStore.countEnabled = 0;
globalStore.trace = "";
globalStore.n1 = 1;
globalStore.n4 = 0;
globalStore.n3 = 0;
globalStore.n2 = 0;

globalStore.enabled_n5 = false; // init
globalStore.enabled_n9 = false; // thresh
globalStore.enabled_n6 = false; // bid
globalStore.enabled_n7 = false; // dec
globalStore.enabled_n8 = false; // expire

globalStore.fired_n5 = 0;
globalStore.fired_n9 = 0;
globalStore.fired_n6 = 0;
globalStore.fired_n7 = 0;
globalStore.fired_n8 = 0;

globalStore.vars = { t : {'maxValue': 100000.0, 'minValue': 0.0, 'type': 'java.lang.Double'}, o : {'maxValue': 100000.0, 'minValue': 0.0, 'type': 'java.lang.Double'} };

globalStore.t = 0;
globalStore.o = 0;
}

var update_enabled_n5 = function() {
if(globalStore.n1 > 0) {
if (!globalStore.enabled_n5) {
globalStore.enabled_n5 = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_n5) {
globalStore.enabled_n5 = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}

var update_enabled_n9 = function() {
if(globalStore.n3 > 0 && globalStore.o>1000) {
if (!globalStore.enabled_n9) {
globalStore.enabled_n9 = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_n9) {
globalStore.enabled_n9 = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}

var update_enabled_n6 = function() {
if(globalStore.n3 > 0 && globalStore.t>0) {
if (!globalStore.enabled_n6) {
globalStore.enabled_n6 = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_n6) {
globalStore.enabled_n6 = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}

var update_enabled_n7 = function() {
if(globalStore.n2 > 0 && globalStore.t>0) {
if (!globalStore.enabled_n7) {
globalStore.enabled_n7 = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_n7) {
globalStore.enabled_n7 = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}

var update_enabled_n8 = function() {
if(globalStore.n3 > 0 && globalStore.t<=0&&globalStore.o>0 && globalStore.n2 > 0 && globalStore.t<=0&&globalStore.o>0) {
if (!globalStore.enabled_n8) {
globalStore.enabled_n8 = true;
globalStore.countEnabled = globalStore.countEnabled + 1;
}
} else {
if (globalStore.enabled_n8) {
globalStore.enabled_n8 = false;
globalStore.countEnabled = globalStore.countEnabled - 1;
}
}
}


var fire_n5 = function() {
globalStore.n1 = globalStore.n1 - 1;
globalStore.n3 = globalStore.n3 + 1;

globalStore.n2 = globalStore.n2 + 1;

globalStore.fired_n5 = globalStore.fired_n5 + 1;

var old_var_t = globalStore.t;
globalStore.t = uniform({a: globalStore.vars['t']['minValue'], b: globalStore.vars['t']['maxValue']});
var old_var_o = globalStore.o;
globalStore.o = 0;
condition(globalStore.t>0&&globalStore.o==0);

update_enabled_n9();
update_enabled_n6();
update_enabled_n7();
update_enabled_n8();
update_enabled_n5();
}


var fire_n9 = function() {
globalStore.n3 = globalStore.n3 - 1;
globalStore.n4 = globalStore.n4 + 1;

globalStore.fired_n9 = globalStore.fired_n9 + 1;



update_enabled_n9();
update_enabled_n6();
update_enabled_n8();
}


var fire_n6 = function() {
globalStore.n3 = globalStore.n3 - 1;
globalStore.n3 = globalStore.n3 + 1;

globalStore.fired_n6 = globalStore.fired_n6 + 1;

var old_var_o = globalStore.o;
globalStore.o = uniform({a: globalStore.vars['o']['minValue'], b: globalStore.vars['o']['maxValue']});
condition(globalStore.o>old_var_o);

update_enabled_n9();
update_enabled_n6();
update_enabled_n8();
}


var fire_n7 = function() {
globalStore.n2 = globalStore.n2 - 1;
globalStore.n2 = globalStore.n2 + 1;

globalStore.fired_n7 = globalStore.fired_n7 + 1;

var old_var_t = globalStore.t;
globalStore.t = uniform({a: globalStore.vars['t']['minValue'], b: globalStore.vars['t']['maxValue']});
condition(globalStore.t<old_var_t);

update_enabled_n7();
update_enabled_n8();
}


var fire_n8 = function() {
globalStore.n3 = globalStore.n3 - 1;

globalStore.n2 = globalStore.n2 - 1;
globalStore.n4 = globalStore.n4 + 1;

globalStore.fired_n8 = globalStore.fired_n8 + 1;



update_enabled_n9();
update_enabled_n7();
update_enabled_n6();
update_enabled_n8();
}


var getXMLtag = function (type) {
if (type.includes("Double")) {
return "float";
} else if (type.includes("Integer")) {
return "integer";
} else if (type.includes("Boolean")) {
return "boolean";
}
return "string";
}

var log_transition = function(transition) {
if (transition !== "None") {
var tTag = getXMLtag(globalStore.vars.t.type);
var oTag = getXMLtag(globalStore.vars.o.type);
globalStore.xesOutput += "<event>\n";
globalStore.xesOutput +=  "<string key=\"concept:name\" value=\"" + transition + "\"/>\n";
if (globalStore.t !== undefined &&  globalStore.t !== null) {
if (globalStore.vars.t.valueMapping) {
var tValue = globalStore.vars.t.valueMapping[globalStore.t] || globalStore.t;
globalStore.xesOutput +=  "<" + tTag +   " key=\"t\" value=\"" + tValue + "\"/>\n";
}
else {
globalStore.xesOutput +=  "<" + tTag +   " key=\"t\" value=\"" + globalStore.t + "\"/>\n";
}
}
if (globalStore.o !== undefined &&  globalStore.o !== null) {
if (globalStore.vars.o.valueMapping) {
var oValue = globalStore.vars.o.valueMapping[globalStore.o] || globalStore.o;
globalStore.xesOutput +=  "<" + oTag +   " key=\"o\" value=\"" + oValue + "\"/>\n";
}
else {
globalStore.xesOutput +=  "<" + oTag +   " key=\"o\" value=\"" + globalStore.o + "\"/>\n";
}
}
globalStore.xesOutput +=  "</event>\n";
globalStore.trace += globalStore.xesOutput;
}
};

var simulator_loop = function(steps) {

globalStore.xesOutput = "";

var enabledTransitions = filter(function(x) {
return (x == 0 && globalStore.enabled_n5)||
(x == 1 && globalStore.enabled_n9)||
(x == 2 && globalStore.enabled_n6)||
(x == 3 && globalStore.enabled_n7)||
(x == 4 && globalStore.enabled_n8);
}, [0, 1, 2, 3, 4]);

if (steps <= 0) {
return;
}

if (enabledTransitions.length == 0) {
return;
}

if (globalStore.n4 > 0) {
return;
}

var transition = sample(Categorical({vs: enabledTransitions}));

if (transition == 0) {
log_transition("init");
fire_n5();
}
else if (transition == 1) {
log_transition("thresh");
fire_n9();
}
else if (transition == 2) {
log_transition("bid");
fire_n6();
}
else if (transition == 3) {
log_transition("dec");
fire_n7();
}
else if (transition == 4) {
log_transition("expire");
fire_n8();
}
else {
console.log("Selected illegal transition; should never happen.");
}
simulator_loop(steps - 1);
}

var simulator = function(){
init();
update_enabled_n5();
update_enabled_n9();
update_enabled_n6();
update_enabled_n7();
update_enabled_n8();

globalStore.trace += "<trace>\n";

simulator_loop(50);

globalStore.trace += "</trace>\n";

console.log(globalStore.trace);

return;
}

var dist = Infer({
method: 'MCMC', 
samples: 5000,
},simulator);

